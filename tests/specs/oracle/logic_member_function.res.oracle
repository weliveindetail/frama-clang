[kernel] Parsing tests/specs/logic_member_function.cpp (external front-end)
Now output intermediate result
/* Generated by Frama-C */
struct _frama_c_vmt_content {
   void (*method_ptr)() ;
   int shift_this ;
};
struct _frama_c_rtti_name_info_node;
struct _frama_c_vmt {
   struct _frama_c_vmt_content *table ;
   int table_size ;
   struct _frama_c_rtti_name_info_node *rtti_info ;
};
struct _frama_c_rtti_name_info_content {
   struct _frama_c_rtti_name_info_node *value ;
   int shift_object ;
   int shift_vmt ;
};
struct _frama_c_rtti_name_info_node {
   char const *name ;
   struct _frama_c_rtti_name_info_content *base_classes ;
   int number_of_base_classes ;
   struct _frama_c_vmt *pvmt ;
};
struct A;
struct A {
   int val ;
};
union U {
   int i ;
};
struct _frama_c_vmt _frama_c_vmt_header;
struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

struct _frama_c_vmt_content _frama_c_vmt[1];
/*@ logic int V(struct A \this) = \this.val;
 */
/*@ requires \valid_read(this); */
void A::Ctor(struct A const *this)
{
  this->val = 0;
  return;
}

/*@ requires \valid_read(this); */
void A::Ctor(struct A const *this, int v)
{
  this->val = v;
  return;
}

/*@ requires \valid(this);
    requires \valid_read(a);
    ensures \valid(\result);
    ensures \old(this)->val ≡ \old(a)->val;
    ensures V(*\result) ≡ \old(a)->val;
    ensures V(*\old(this)) ≡ V(*\old(a));
    ensures *\result ≡ *\old(this);
    assigns this->val;
 */
struct A *operator=(struct A *this, struct A const *a)
{
  this->val = a->val;
  return this;
}

/*@ requires \valid_read(this); */
int value(struct A const *this)
{
  int __retres;
  __retres = this->val;
  return __retres;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "A",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
struct _frama_c_vmt _frama_c_vmt_header;
struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

struct _frama_c_vmt_content _frama_c_vmt[1];
/*@ predicate foo(union U \this) = \this.i ≡ 0;

*/
struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "U",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
/*@ requires \valid(x);
    ensures \old(x)->i ≡ 0;
    assigns *x; */
void g(union U *x)
{
  x->i = 0;
  return;
}

/*@ requires \valid(x);
    ensures foo(*\old(x));
    assigns *x; */
void h(union U *x)
{
  x->i = 0;
  return;
}


