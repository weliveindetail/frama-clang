[kernel] Parsing tests/specs/multiple_decls.cpp (external front-end)
Now output intermediate result
[kernel] tests/specs/multiple_decls.cpp:5: Warning: 
  found two contracts (old location: tests/specs/multiple_decls.cpp:5). Merging them
/* Generated by Frama-C */
struct _frama_c_vmt_content {
   void (*method_ptr)() ;
   int shift_this ;
};
struct _frama_c_rtti_name_info_node;
struct _frama_c_vmt {
   struct _frama_c_vmt_content *table ;
   int table_size ;
   struct _frama_c_rtti_name_info_node *rtti_info ;
};
struct _frama_c_rtti_name_info_content {
   struct _frama_c_rtti_name_info_node *value ;
   int shift_object ;
   int shift_vmt ;
};
struct _frama_c_rtti_name_info_node {
   char const *name ;
   struct _frama_c_rtti_name_info_content *base_classes ;
   int number_of_base_classes ;
   struct _frama_c_vmt *pvmt ;
};
struct Point {
   
};
struct Queue {
   
};
struct _frama_c_vmt _frama_c_vmt_header;
struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

struct _frama_c_vmt_content _frama_c_vmt[1];
void foo(struct Point *this);

/*@ requires \valid(this); */
void bar(struct Point *this)
{
  return;
}

/*@ requires 0 ≡ 0;
    requires \valid(this); */
void foo(struct Point *this)
{
  bar(this);
  return;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "Point",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
struct _frama_c_vmt _frama_c_vmt_header;
struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

struct _frama_c_vmt_content _frama_c_vmt[1];
void pop(struct Queue *this);

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "Queue",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
/*@ requires \valid(this);
    requires 0 < 2; */
void pop(struct Queue *this)
{
  return;
}

void f(int *x);

/*@ requires \valid(x);
    requires *x ≥ 1;
    ensures *\old(x) ≥ 0; */
void f(int *x)
{
  (*x) --;
  return;
}

void h(int *x);

/*@ requires \valid(x);
    requires *x ≤ 10;
    ensures *\old(x) ≥ \old(*x); */
void h(int *x)
{
  (*x) ++;
  return;
}


