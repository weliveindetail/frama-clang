[kernel] Parsing tests/specs/logic_defs.cc (external front-end)
Now output intermediate result
/* Generated by Frama-C */
struct _frama_c_vmt_content {
   void (*method_ptr)() ;
   int shift_this ;
};
struct _frama_c_rtti_name_info_node;
struct _frama_c_vmt {
   struct _frama_c_vmt_content *table ;
   int table_size ;
   struct _frama_c_rtti_name_info_node *rtti_info ;
};
struct _frama_c_rtti_name_info_content {
   struct _frama_c_rtti_name_info_node *value ;
   int shift_object ;
   int shift_vmt ;
};
struct _frama_c_rtti_name_info_node {
   char const *name ;
   struct _frama_c_rtti_name_info_content *base_classes ;
   int number_of_base_classes ;
   struct _frama_c_vmt *pvmt ;
};
struct A;
struct A {
   int x ;
};
void A::Ctor(struct A const *this);

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

/*@ requires \valid_read(this); */
void A::Ctor(struct A const *this)
{
  return;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "A",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
/*@ predicate test(int a, struct A b) = a ‚â° b.x;
 */
/*@ predicate test2(int a, struct A b) 
      reads a, b;
 */
/*@ logic ‚Ñ§ test3(int a, struct A b) = a + b.x;
 */
/*@ logic ‚Ñ§ test4(int a, struct A b) 
      reads a, b;
 */
/*@ logic ùîπ test5(int a, struct A b) = a ‚â° b.x;
 */
/*@
lemma foo:
  ‚àÄ int a;
  ‚àÄ struct A b; test(a, b) ‚áî test5(a, b) ‚â¢ (0 ‚â¢ 0);

*/
int main(void)
{
  int __retres;
  struct A a;
  A::Ctor(& a);
  a.x = 0;
  int x = 0;
  /*@ assert test(x, a) ‚àß test2(x, a) ‚àß test3(x, a) ‚â° test4(x, a); */ ;
  __retres = 0;
  return __retres;
}


