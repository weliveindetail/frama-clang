[kernel] Parsing tests/bugs/issue2564.cpp (external front-end)
Now output intermediate result
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  _frama_c_rtti_name_info.name ∈ {{ "Foo" }}
                         {.base_classes; .number_of_base_classes; .pvmt} ∈
                         {0}
[eva] done for function main
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  5 functions analyzed (out of 6): 83% coverage.
  In these functions, 12 statements reached (out of 12): 100% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  0 alarms generated by the analysis.
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     4 valid     0 unknown     0 invalid      4 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[from] Computing for function add
[from] Done for function add
[from] Computing for function get
[from] Done for function get
[from] Computing for function Foo::Ctor
[from] Done for function Foo::Ctor
[from] Computing for function func<Foo>
[from] Done for function func<Foo>
[from] Computing for function main
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
  These dependencies hold at termination for the executions that terminate:
[from] Function add:
  foo FROM this; x
[from] Function get:
  \result FROM this; foo
[from] Function Foo::Ctor:
  NO EFFECTS
[from] Function func<Foo>:
  foo FROM foo; x
  \result FROM foo
[from] Function main:
  \result FROM argc
[from] ====== END OF DEPENDENCIES ======
/* Generated by Frama-C */
struct _frama_c_vmt_content {
   void (*method_ptr)() ;
   int shift_this ;
};
struct _frama_c_rtti_name_info_node;
struct _frama_c_vmt {
   struct _frama_c_vmt_content *table ;
   int table_size ;
   struct _frama_c_rtti_name_info_node *rtti_info ;
};
struct _frama_c_rtti_name_info_content {
   struct _frama_c_rtti_name_info_node *value ;
   int shift_object ;
   int shift_vmt ;
};
struct _frama_c_rtti_name_info_node {
   char const *name ;
   struct _frama_c_rtti_name_info_content *base_classes ;
   int number_of_base_classes ;
   struct _frama_c_vmt *pvmt ;
};
struct Foo;
struct Foo {
   int val ;
};
void add(struct Foo *this, int x);

struct Foo *func<Foo>(struct Foo *foo, int x)
{
  add(foo,x);
  return foo;
}

void Foo::Ctor(struct Foo const *this);

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

/*@ requires \valid(this); */
int get(struct Foo *this)
{
  int __retres;
  __retres = this->val;
  return __retres;
}

/*@ requires \valid(this); */
void add(struct Foo *this, int x)
{
  this->val = x;
  return;
}

/*@ requires \valid_read(this); */
void Foo::Ctor(struct Foo const *this)
{
  return;
}

struct Foo *func<Foo>(struct Foo *foo, int x)
{
  add(foo,x);
  return foo;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "Foo",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
int main(int argc, char **argv)
{
  int tmp_0;
  struct Foo *tmp;
  struct Foo foo;
  Foo::Ctor(& foo);
  add(& foo,argc);
  tmp = func<Foo>(& foo,argc);
  tmp_0 = get(tmp);
  return tmp_0;
}


