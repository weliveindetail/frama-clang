[kernel] Parsing tests/template/template_of_template.cpp (external front-end)
Now output intermediate result
/* Generated by Frama-C */
struct _frama_c_vmt_content {
   void (*method_ptr)() ;
   int shift_this ;
};
struct _frama_c_rtti_name_info_node;
struct _frama_c_vmt {
   struct _frama_c_vmt_content *table ;
   int table_size ;
   struct _frama_c_rtti_name_info_node *rtti_info ;
};
struct _frama_c_rtti_name_info_content {
   struct _frama_c_rtti_name_info_node *value ;
   int shift_object ;
   int shift_vmt ;
};
struct _frama_c_rtti_name_info_node {
   char const *name ;
   struct _frama_c_rtti_name_info_content *base_classes ;
   int number_of_base_classes ;
   struct _frama_c_vmt *pvmt ;
};
struct e<void> {
   
};
struct e<a::c<a::b<char>>> {
   
};
void e<void>::Ctor(struct e<void> const *this);

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

/*@ requires \valid_read(this); */
void e<void>::Ctor(struct e<void> const *this)
{
  return;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "e",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
void e<a::c<a::b<char>>>::Ctor(struct e<a::c<a::b<char>>> const *this);

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

/*@ requires \valid_read(this); */
void e<a::c<a::b<char>>>::Ctor(struct e<a::c<a::b<char>>> const *this)
{
  return;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "e",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
struct e<void> d;
void __fc_init_ZN5boostE1d(void) __attribute__((__constructor__));
void __fc_init_ZN5boostE1d(void)
{
  e<void>::Ctor((struct e<void> const *)(& d));
  return;
}

struct e<a::c<a::b<char>>> x;
void __fc_init_ZN5boostE1x(void) __attribute__((__constructor__));
void __fc_init_ZN5boostE1x(void)
{
  e<a::c<a::b<char>>>::Ctor((struct e<a::c<a::b<char>>> const *)(& x));
  return;
}


