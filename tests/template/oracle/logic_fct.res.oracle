[kernel] Parsing tests/template/logic_fct.cpp (external front-end)
Now output intermediate result
/* Generated by Frama-C */
struct _frama_c_vmt_content {
   void (*method_ptr)() ;
   int shift_this ;
};
struct _frama_c_rtti_name_info_node;
struct _frama_c_vmt {
   struct _frama_c_vmt_content *table ;
   int table_size ;
   struct _frama_c_rtti_name_info_node *rtti_info ;
};
struct _frama_c_rtti_name_info_content {
   struct _frama_c_rtti_name_info_node *value ;
   int shift_object ;
   int shift_vmt ;
};
struct _frama_c_rtti_name_info_node {
   char const *name ;
   struct _frama_c_rtti_name_info_content *base_classes ;
   int number_of_base_classes ;
   struct _frama_c_vmt *pvmt ;
};
typedef int size_type;
struct Stack<6> {
   size_type sz ;
};
void Stack<6>::Ctor(struct Stack<6> const *this);

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

/*@ logic ℤ Size(struct Stack<6> \this) = \this.sz;
 */
/*@
logic _Bool foo1(struct Stack<6> \this, struct Stack<6> s) =
  (_Bool)(Size(\this) ≡ 0? 1: 0);
 */
/*@
logic _Bool foo3(struct Stack<6> \this, struct Stack<6> s) =
  (_Bool)(Size(s) ≡ 0? 1: 0);
 */
/*@ requires \valid_read(this);
    ensures \result ≡ Size(*\old(this)); */
int size(struct Stack<6> const *this);

/*@ requires \valid_read(this); */
void Stack<6>::Ctor(struct Stack<6> const *this)
{
  return;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "Stack",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
struct Stack<6> s;
void __fc_init_Z1s(void) __attribute__((__constructor__));
void __fc_init_Z1s(void)
{
  Stack<6>::Ctor((struct Stack<6> const *)(& s));
  return;
}


