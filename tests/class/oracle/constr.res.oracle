[kernel] Parsing tests/class/constr.cc (external front-end)
Now output intermediate result
/* Generated by Frama-C */
struct _frama_c_vmt_content {
   void (*method_ptr)() ;
   int shift_this ;
};
struct _frama_c_rtti_name_info_node;
struct _frama_c_vmt {
   struct _frama_c_vmt_content *table ;
   int table_size ;
   struct _frama_c_rtti_name_info_node *rtti_info ;
};
struct _frama_c_rtti_name_info_content {
   struct _frama_c_rtti_name_info_node *value ;
   int shift_object ;
   int shift_vmt ;
};
struct _frama_c_rtti_name_info_node {
   char const *name ;
   struct _frama_c_rtti_name_info_content *base_classes ;
   int number_of_base_classes ;
   struct _frama_c_vmt *pvmt ;
};
struct Foo;
struct Foo {
   int x ;
};
struct Foo *operator=(struct Foo *this, struct Foo *__frama_c_arg_0);

void Foo::Dtor(struct Foo const *this);

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

/*@ requires \valid_read(this); */
void Foo::Ctor(struct Foo const *this, int a)
{
  this->x = a;
  return;
}

/*@ requires \valid(this);
    requires \valid(__frama_c_arg_0);
    ensures \valid(\result);
 */
struct Foo *operator=(struct Foo *this, struct Foo *__frama_c_arg_0)
{
  this->x = __frama_c_arg_0->x;
  return this;
}

/*@ requires \valid_read(this); */
void Foo::Dtor(struct Foo const *this)
{
  return;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "Foo",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
struct Foo x;
void __fc_init_Z1x(void) __attribute__((__constructor__));
void __fc_init_Z1x(void)
{
  Foo::Ctor((struct Foo const *)(& x),0);
  return;
}

struct Foo y;
void __fc_init_Z1y(void) __attribute__((__constructor__));
void __fc_init_Z1y(void)
{
  Foo::Ctor((struct Foo const *)(& y),1);
  return;
}

int main(void)
{
  int __retres;
  {
    struct Foo *tmp;
    struct Foo __fc_tmp_0;
    Foo::Ctor(& __fc_tmp_0,2);
    tmp = operator=(& x,& __fc_tmp_0);
    Foo::Dtor((struct Foo const *)(& __fc_tmp_0));
  }
  __retres = 0;
  return __retres;
}


