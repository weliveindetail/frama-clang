tests/class/alloc.cc:11:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
tests/class/alloc.cc:12:[kernel] warning: Calling undeclared function free. Old style K&R code?
/* Generated by Frama-C */
struct _Z1A;
struct A {
   int _ZN1A1yE ;
};
int x = 0;
__inline void A::Ctor(struct A *this);
__inline void A::Dtor(struct A *this);
__inline void A::Ctor(struct A *this, struct A *__other);
__inline struct A *operator=(struct A *this, struct A *__other);
/*@ requires \valid(this); */
__inline void A::Ctor(struct A *this)
{
  x ++;
  this->y = 1;
  return;
}

/*@ requires \valid(this); */
__inline void A::Dtor(struct A *this)
{
  x --;
  return;
}

/*@ requires \valid(this);
    requires \valid(__other); */
__inline void A::Ctor(struct A *this, struct A *__other)
{
  this->y = __other->y;
  return;
}

/*@ requires \valid(this);
    requires \valid(__other); */
__inline struct A *operator=(struct A *this, struct A *__other)
{
  struct A *__res;
  this->y = __other->y;
  __res = this;
  return __res;
}

extern int ( /* missing proto */ malloc)(int x_0);
extern int ( /* missing proto */ free)(struct A *x_0);
int main(void)
{
  struct A *e_new_name_0;
  int tmp;
  struct A *a;
  int __res;
  tmp = malloc((int)sizeof(*e_new_name_0));
  e_new_name_0 = (struct A *)tmp;
  A::Ctor(e_new_name_0);
  a = e_new_name_0;
  A::Dtor(a);
  free(a);
  __res = 0;
  return __res;
}


