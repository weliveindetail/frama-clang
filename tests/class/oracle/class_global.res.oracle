[kernel] Parsing tests/class/class_global.cc (external front-end)
Now output intermediate result
/* Generated by Frama-C */
struct _frama_c_vmt_content {
   void (*method_ptr)() ;
   int shift_this ;
};
struct _frama_c_rtti_name_info_node;
struct _frama_c_vmt {
   struct _frama_c_vmt_content *table ;
   int table_size ;
   struct _frama_c_rtti_name_info_node *rtti_info ;
};
struct _frama_c_rtti_name_info_content {
   struct _frama_c_rtti_name_info_node *value ;
   int shift_object ;
   int shift_vmt ;
};
struct _frama_c_rtti_name_info_node {
   char const *name ;
   struct _frama_c_rtti_name_info_content *base_classes ;
   int number_of_base_classes ;
   struct _frama_c_vmt *pvmt ;
};
struct Bar;
struct Bar {
   int t ;
};
struct Foo;
struct Foo {
   int x ;
   struct Bar y ;
};
void Bar::Dtor(struct Bar const *this);

struct _frama_c_vmt _frama_c_vmt_header;
struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

struct _frama_c_vmt_content _frama_c_vmt[1];
/*@ requires \valid_read(this); */
void Bar::Ctor(struct Bar const *this, int x)
{
  this->t = x + x;
  return;
}

/*@ requires \valid_read(this); */
void Bar::Dtor(struct Bar const *this)
{
  return;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "Bar",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
void Foo::Dtor(struct Foo const *this);

struct _frama_c_vmt _frama_c_vmt_header;
struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

struct _frama_c_vmt_content _frama_c_vmt[1];
/*@ requires \valid_read(this); */
void Foo::Ctor(struct Foo const *this)
{
  this->x = 0;
  Bar::Ctor(& this->y,1);
  this->x = 42;
  this->y.t = 36;
  return;
}

/*@ requires \valid_read(this); */
void Foo::Dtor(struct Foo const *this)
{
  Bar::Dtor(& this->y);
  return;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "Foo",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
struct Foo foo;
void __fc_init_Z3foo(void) __attribute__((__constructor__));
void __fc_init_Z3foo(void)
{
  Foo::Ctor((struct Foo const *)(& foo));
  return;
}

struct Foo *bar = & foo;
struct Foo const *baz;
void __fc_init_Z3baz(void) __attribute__((__constructor__));
void __fc_init_Z3baz(void)
{
  struct Foo __fc_tmp_0;
  Foo::Ctor(& __fc_tmp_0);
  baz = (struct Foo const *)(& __fc_tmp_0);
  Foo::Dtor((struct Foo const *)(& __fc_tmp_0));
  return;
}

int main(void)
{
  int __retres;
  foo.x = 1;
  foo.y.t = 0;
  if (bar->x == baz->x) {
    __retres = foo.y.t;
    goto return_label;
  }
  else {
    __retres = 1;
    goto return_label;
  }
  return_label: return __retres;
}


