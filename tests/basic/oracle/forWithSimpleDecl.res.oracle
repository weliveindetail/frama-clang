[kernel] Parsing tests/basic/forWithSimpleDecl.cpp (external front-end)
Now output intermediate result
[kernel] Warning: Assuming declared function f can't throw any exception
/* Generated by Frama-C */
struct _frama_c_vmt_content {
   void (*method_ptr)() ;
   int shift_this ;
};
struct _frama_c_rtti_name_info_node;
struct _frama_c_vmt {
   struct _frama_c_vmt_content *table ;
   int table_size ;
   struct _frama_c_rtti_name_info_node *rtti_info ;
};
struct _frama_c_rtti_name_info_content {
   struct _frama_c_rtti_name_info_node *value ;
   int shift_object ;
   int shift_vmt ;
};
struct _frama_c_rtti_name_info_node {
   char const *name ;
   struct _frama_c_rtti_name_info_content *base_classes ;
   int number_of_base_classes ;
   struct _frama_c_vmt *pvmt ;
};
struct s;
struct s {
   float a ;
};
void s::Ctor(struct s const *this);

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

/*@ requires \valid_read(this); */
void s::Ctor(struct s const *this)
{
  return;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "s",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
int f(void);

int main(void)
{
  int __retres;
  double t[15];
  float j;
  {
    int p;
    int e;
    while (1) ;
  }
  {
    int p_0;
    int e_0;
    while (1) p_0 = e_0;
  }
  {
    int i;
    while (1) {
      i = 17;
      break;
    }
  }
  {
    int p_1 = 3;
    int e_1 = p_1 + 1;
    while (1) p_1 += e_1;
  }
  {
    int a;
    while ((_Bool)1) {
      int tmp;
      goto __Cont;
      __Cont: { /* sequence */
                tmp = f();
                ;
              }
    }
  }
  struct s i_0;
  s::Ctor(& i_0);
  {
    double k;
    double i_1 = (double)0;
    double *j_0 = t;
    while (i_1 < (double)15) {
      i_1 += (double)1;
      j_0 ++;
      k -= (double)1;
    }
  }
  j = i_0.a;
  __retres = 0;
  return __retres;
}


