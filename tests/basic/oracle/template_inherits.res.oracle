[kernel] Parsing tests/basic/template_inherits.cpp (external front-end)
Now output intermediate result
[kernel] Warning: Assuming declared function free can't throw any exception
/* Generated by Frama-C */
struct _frama_c_vmt_content {
   void (*method_ptr)() ;
   int shift_this ;
};
struct _frama_c_rtti_name_info_node;
struct _frama_c_vmt {
   struct _frama_c_vmt_content *table ;
   int table_size ;
   struct _frama_c_rtti_name_info_node *rtti_info ;
};
struct _frama_c_rtti_name_info_content {
   struct _frama_c_rtti_name_info_node *value ;
   int shift_object ;
   int shift_vmt ;
};
struct _frama_c_rtti_name_info_node {
   char const *name ;
   struct _frama_c_rtti_name_info_content *base_classes ;
   int number_of_base_classes ;
   struct _frama_c_vmt *pvmt ;
};
struct B;
struct A<B> {
   
};
struct B {
   struct A<B> _frama_c__Z1AI1BE ;
};
void free(void *ptr);

void A<B>::Dtor(struct A<B> const *this);

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

void m_fn1(struct A<B> *this);

/*@ requires \valid_read(this); */
void A<B>::Dtor(struct A<B> const *this)
{
  return;
}

void B::Dtor(struct B const *this);

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

/*@ requires \valid_read(this); */
void B::Dtor(struct B const *this)
{
  A<B>::Dtor(& this->_frama_c__Z1AI1BE);
  return;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "B",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
/*@ requires \valid(this); */
void m_fn1(struct A<B> *this)
{
  B::Dtor((struct B const *)0);
  free((void *)0);
  return;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "A",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};

