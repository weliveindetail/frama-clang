[kernel] Parsing tests/basic/incomplete_type.cpp (external front-end)
Now output intermediate result
/* Generated by Frama-C */
struct _frama_c_vmt_content {
   void (*method_ptr)() ;
   int shift_this ;
};
struct _frama_c_rtti_name_info_node;
struct _frama_c_vmt {
   struct _frama_c_vmt_content *table ;
   int table_size ;
   struct _frama_c_rtti_name_info_node *rtti_info ;
};
struct _frama_c_rtti_name_info_content {
   struct _frama_c_rtti_name_info_node *value ;
   int shift_object ;
   int shift_vmt ;
};
struct _frama_c_rtti_name_info_node {
   char const *name ;
   struct _frama_c_rtti_name_info_content *base_classes ;
   int number_of_base_classes ;
   struct _frama_c_vmt *pvmt ;
};
struct A;
enum anonymous_variable_0 {
    E = 0U,
    F = 1U
};
struct A {
   enum anonymous_variable_0 t ;
};
struct B;
struct B {
   int a ;
   struct A mem[] ;
};
void A::Ctor(struct A const *this);

void A::Dtor(struct A const *this);

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

/*@ requires \valid_read(this); */
void A::Ctor(struct A const *this)
{
  return;
}

/*@ requires \valid_read(this); */
void A::Dtor(struct A const *this)
{
  return;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "A",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
void B::Ctor(struct B const *this);

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info;

void m_fn1(struct B *this, struct A **p1, long __frama_c_arg_1,
           unsigned int __frama_c_arg_2);

/*@ requires \valid_read(this); */
void B::Ctor(struct B const *this)
{
  return;
}

struct _frama_c_rtti_name_info_node _frama_c_rtti_name_info =
  {.name = "B",
   .base_classes = (struct _frama_c_rtti_name_info_content *)0,
   .number_of_base_classes = 0,
   .pvmt = (struct _frama_c_vmt *)0};
/*@ requires \valid(this);
    requires \valid(p1); */
void m_fn1(struct B *this, struct A **p1, long __frama_c_arg_1,
           unsigned int __frama_c_arg_2)
{
  (*p1)->t = (enum anonymous_variable_0)E;
  this->mem[0].t = (enum anonymous_variable_0)F;
  return;
}

int main(void)
{
  int __retres;
  struct B b;
  B::Ctor(& b);
  struct A a;
  A::Ctor(& a);
  struct A *p = & a;
  m_fn1(& b,& p,(long)0,(unsigned int)0);
  __retres = (int)a.t;
  A::Dtor((struct A const *)(& a));
  return __retres;
}


